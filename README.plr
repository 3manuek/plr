/*
 * PL/R - PostgreSQL support for R as a
 *	      procedural language (PL)
 *
 * Copyright (c) 2003 by Joseph E. Conway
 * ALL RIGHTS RESERVED;
 * 
 * Joe Conway <mail@joeconway.com>
 * 
 * Based on pltcl by Jan Wieck
 * and inspired by REmbeddedPostgres by
 * Duncan Temple Lang <duncan@research.bell-labs.com>
 * http://www.omegahat.org/RSPostgres/
 *
 * Permission to use, copy, modify, and distribute this software and its
 * documentation for any purpose, without fee, and without a written agreement
 * is hereby granted, provided that the above copyright notice and this
 * paragraph and the following two paragraphs appear in all copies.
 *
 * IN NO EVENT SHALL THE AUTHORS OR DISTRIBUTORS BE LIABLE TO ANY PARTY FOR
 * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING
 * LOST PROFITS, ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS
 * DOCUMENTATION, EVEN IF THE AUTHOR OR DISTRIBUTORS HAVE BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 * THE AUTHORS AND DISTRIBUTORS SPECIFICALLY DISCLAIM ANY WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS
 * ON AN "AS IS" BASIS, AND THE AUTHOR AND DISTRIBUTORS HAS NO OBLIGATIONS TO
 * PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
 */
Version 0.1 (31 January, 2003):
    - initial release    

Installation:
  Place these files in a directory called 'plr' under 'contrib' in the
  PostgreSQL source tree. Then run:

    make
    make install

  You can use plr.sql to create the functions in your database of choice, e.g.

    psql mydatabase < plr.sql

  installs following functions into the database:

     plr_call_handler()
       - the PL/R PostgreSQL language handler
     install_rcmd(text <cmd>) RETURNS 'OK' or ERROR
       - executes <cmd> in the R interpreter; useful to install an R
         function, or to load a library, for use by your PL/R functions
     array(float8 <element>) RETURNS float8[], NULL on NULL input
       - creates a float8 array from <element>
     array_push(float8[] <array>, float8 <element>) RETURNS float8[],
       NULL on NULL input
       - adds <element> to the end of <array>
     array_accum(float8[] <array>, float8 <element>) RETURNS float8[],
       NULL on NULL <element>, creates new array on NULL <array>
       - adds <element> to the end of <array>


Documentation:

  See the following files:
     doc/plr         - PL/R usage
     doc/r_support   - support functions installed into the R interpreter
                       on initialization of the environment
     doc/pg_support  - auxillary PostgreSQL C functions, useful in
                       conjunction with PL/R

==================================================================
-- Joe Conway

